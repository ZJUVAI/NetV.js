(window.webpackJsonp=window.webpackJsonp||[]).push([[41],{862:function(t,s,a){"use strict";a.r(s);var e=a(113),r=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"接口"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#接口"}},[t._v("#")]),t._v(" 接口")]),t._v(" "),a("h2",{attrs:{id:"initializationconfigurations"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#initializationconfigurations"}},[t._v("#")]),t._v(" "),a("code",[t._v("InitializationConfigurations")])]),t._v(" "),a("div",{staticClass:"language-typescript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-typescript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interface")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("InitializationConfigurations")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    container"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" HTMLDivElement\n    node"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        style"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            shape"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v("\n            fill"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Color\n            strokeWidth"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("number")]),t._v("\n            strokeColor"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Color\n            rotate"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("number")]),t._v("\n            r"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("number")]),t._v("\n            width"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("number")]),t._v("\n            height"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("number")]),t._v("\n            vertexAlpha"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Position\n            vertexBeta"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Position\n            vertexGamma"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Position\n            innerWidth"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("number")]),t._v("\n            innerHeight"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("number")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    link"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        style"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            shape"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v("\n            strokeWidth"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("number")]),t._v("\n            strokeColor"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Color\n            curveness"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("number")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    width"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("number")]),t._v("\n    height"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("number")]),t._v("\n    backgroundColor"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Color\n    nodeLimit"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("number")]),t._v("\n    linkLimit"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("number")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[a("RouterLink",{attrs:{to:"/zh/API/interfaces.html#initializationconfigurations"}},[t._v("initializationConfigurations")]),t._v(" 是 "),a("code",[t._v("NetV")]),t._v(" 初始化配置的接口。")],1),t._v(" "),a("ul",[a("li",[a("code",[t._v("container")]),t._v(" 用来配置可视化的容器, 它是一个 "),a("code",[t._v("<div>")]),t._v(" 元素。可视化和交互都需要容器的参与. 它是 "),a("strong",[t._v("必须的")]),t._v("。")]),t._v(" "),a("li",[a("code",[t._v("node")]),t._v(" 用来配置节点的默认属性和样式\n"),a("ul",[a("li",[a("code",[t._v("style")]),t._v(" 点的样式，类型为"),a("RouterLink",{attrs:{to:"/zh/API/interfaces.html#nodestyle"}},[a("code",[t._v("NodeStyle")])])],1)])]),t._v(" "),a("li",[a("code",[t._v("link")]),t._v(" 用来配置边的默认属性和样式\n"),a("ul",[a("li",[a("code",[t._v("style")]),t._v(" 边的样式，类型为"),a("RouterLink",{attrs:{to:"/zh/API/interfaces.html#linkstyle"}},[a("code",[t._v("LinkStyle")])])],1)])]),t._v(" "),a("li",[a("code",[t._v("width")]),t._v(" 是一个数字, 用来配置画布的宽度. 默认值为 "),a("code",[t._v("800")]),t._v(".")]),t._v(" "),a("li",[a("code",[t._v("height")]),t._v(" 是一个数字, 用来配置画布的高度. 默认值为"),a("code",[t._v("600")]),t._v(".")]),t._v(" "),a("li",[a("code",[t._v("backgroundColor")]),t._v(" 是一个 "),a("RouterLink",{attrs:{to:"/zh/API/interfaces.html#color"}},[t._v("Color")]),t._v(" 对象. 用来配置画布的背景颜色. 默认值为 "),a("code",[t._v("{ r: 1, g: 1, b: 1, a: 1 }")]),t._v(" (白色).")],1),t._v(" "),a("li",[a("code",[t._v("nodeLimit")]),t._v(" 是一个数字. 它用于配置在 WebGL 中为渲染节点分配固定空间. 建议将其设置为需要加载的节点数的上限. 默认值为 100. "),a("strong",[t._v("请注意")]),t._v(", 如果要加载 100 个以上的节点, 则需要将其重置.")]),t._v(" "),a("li",[a("code",[t._v("linkLimit")]),t._v(" 是一个数字. 它用于配置在 WebGL 中为渲染边分配固定空间. 建议将其设置为需要加载的边数的上限. 默认值为 1000. "),a("strong",[t._v("请注意")]),t._v(", 如果要加载 1000 个以上的边, 则需要将其重置.")])]),t._v(" "),a("h2",{attrs:{id:"color"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#color"}},[t._v("#")]),t._v(" "),a("code",[t._v("Color")])]),t._v(" "),a("div",{staticClass:"language-typescript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-typescript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interface")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Color")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    r"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("number")]),t._v("\n    g"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("number")]),t._v("\n    b"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("number")]),t._v("\n    a"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("number")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("ul",[a("li",[a("code",[t._v("r")]),t._v(", "),a("code",[t._v("g")]),t._v(", "),a("code",[t._v("b")]),t._v(", 和 "),a("code",[t._v("a")]),t._v(" 是四个 RGBA 颜色模型的通道, 它们的范围是 "),a("code",[t._v("[0, 1]")]),t._v(".")])]),t._v(" "),a("h2",{attrs:{id:"nodedata"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#nodedata"}},[t._v("#")]),t._v(" "),a("code",[t._v("NodeData")])]),t._v(" "),a("div",{staticClass:"language-typescript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-typescript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interface")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("NodeData")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    id"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v("\n    x"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("number")]),t._v("\n    y"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("number")]),t._v("\n    style"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" NodeStyle\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[a("RouterLink",{attrs:{to:"/zh/API/interfaces.html#nodedata"}},[a("code",[t._v("NodeData")])]),t._v(" 接口定义了输入节点的数据格式.")],1),t._v(" "),a("ul",[a("li",[a("code",[t._v("id")]),t._v(" 是一个字符串. 它应该是唯一的, 用于识别不同的节点, 同时是必须的.")]),t._v(" "),a("li",[a("code",[t._v("x")]),t._v(" 和 "),a("code",[t._v("y")]),t._v(" 是数字. 用来配置节点的位置坐标. 它是可选的.")]),t._v(" "),a("li",[a("code",[t._v("style")]),t._v(" 节点的样式，类型为["),a("code",[t._v("NodeStyle")]),t._v("]")])]),t._v(" "),a("h2",{attrs:{id:"nodestyle"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#nodestyle"}},[t._v("#")]),t._v(" "),a("code",[t._v("NodeStyle")])]),t._v(" "),a("div",{staticClass:"language-typescript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-typescript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interface")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("NodeStyle")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    shape"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" NodeShape\n    offset"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Position\n    fill"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Color\n    strokeWidth"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("number")]),t._v("\n    strokeColor"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Color\n    rotate"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("number")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* circle shape styles */")]),t._v("\n    r"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("number")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* rect shape styles */")]),t._v("\n    width"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("number")]),t._v("\n    height"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("number")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* triangle shape styles */")]),t._v("\n    vertexAlpha"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Position\n    vertexBeta"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Position\n    vertexGamma"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Position\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* cross shape styles */")]),t._v("\n    innerWidth"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("number")]),t._v("\n    innerHeight"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("number")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[a("RouterLink",{attrs:{to:"/zh/API/interfaces.html#nodestyle"}},[a("code",[t._v("NodeStyle")])]),t._v("定义了节点样式的格式。")],1),t._v(" "),a("ul",[a("li",[a("code",[t._v("shape")]),t._v(" string类型，设定节点形状，目前支持："),a("code",[t._v("circle")]),t._v(", "),a("code",[t._v("rect")]),t._v(", "),a("code",[t._v("triangle")]),t._v(", "),a("code",[t._v("cross")]),t._v("，默认为"),a("code",[t._v("circle")]),t._v("。")]),t._v(" "),a("li",[a("code",[t._v("fill")]),t._v(" 类型为 "),a("RouterLink",{attrs:{to:"/zh/API/interfaces.html#color"}},[t._v("Color")]),t._v(" 对象，用来配置节点的颜色. 默认值为 "),a("code",[t._v("{r: 0.2, g: 0.6, b: 0.2, a: 1.}")]),t._v("。")],1),t._v(" "),a("li",[a("code",[t._v("strokeWidth")]),t._v(" 类型为数字, 用来配置节点的边框宽度. 默认值为 "),a("code",[t._v("2")]),t._v("。")]),t._v(" "),a("li",[a("code",[t._v("strokeColor")]),t._v(" 类型为 "),a("RouterLink",{attrs:{to:"/zh/API/interfaces.html#color"}},[t._v("Color")]),t._v(" 对象，用来配置节点的边框颜色. 默认值为 "),a("code",[t._v("{ r: 0.9, g: 0.9, b: 0.9, a: 0.6 }")]),t._v("。")],1),t._v(" "),a("li",[a("code",[t._v("circle")]),t._v("样式\n"),a("ul",[a("li",[a("code",[t._v("r")]),t._v(" 类型为数字，用来配置节点的半径。默认值为 "),a("code",[t._v("5")]),t._v("。")])])]),t._v(" "),a("li",[a("code",[t._v("rect")]),t._v("样式\n"),a("ul",[a("li",[a("code",[t._v("width")]),t._v(" 长方形宽度，默认为"),a("code",[t._v("5")])]),t._v(" "),a("li",[a("code",[t._v("height")]),t._v(" 长方形高度，默认为"),a("code",[t._v("5")])]),t._v(" "),a("li",[a("code",[t._v("rotate")]),t._v(" 旋转角度，范围为"),a("code",[t._v("[-PI, PI]")]),t._v("，顺时针为正向")])])]),t._v(" "),a("li",[a("code",[t._v("triangle")]),t._v("样式\n"),a("ul",[a("li",[a("code",[t._v("vertexAlpha")])]),t._v(" "),a("li",[a("code",[t._v("vertexBeta")])]),t._v(" "),a("li",[a("code",[t._v("vertexGamma")])]),t._v(" "),a("li",[a("code",[t._v("rotate")]),t._v(" 旋转角度，范围为"),a("code",[t._v("[-PI, PI]")]),t._v("，顺时针为正向")])])]),t._v(" "),a("li",[a("code",[t._v("cross")]),t._v("样式\n"),a("ul",[a("li",[a("code",[t._v("width")]),t._v(" 十字架整体宽度")]),t._v(" "),a("li",[a("code",[t._v("height")]),t._v(" 十字架整体高度")]),t._v(" "),a("li",[a("code",[t._v("innerWidth")]),t._v(" 十字架竖线宽度")]),t._v(" "),a("li",[a("code",[t._v("innerHeight")]),t._v(" 十字架横线高度")]),t._v(" "),a("li",[a("code",[t._v("rotate")]),t._v(" 旋转角度，范围为"),a("code",[t._v("[-PI, PI]")]),t._v("，顺时针为正向")])])])]),t._v(" "),a("h2",{attrs:{id:"linkdata"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#linkdata"}},[t._v("#")]),t._v(" "),a("code",[t._v("LinkData")])]),t._v(" "),a("div",{staticClass:"language-typescript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-typescript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interface")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("LinkData")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    source"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v("\n    target"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v("\n    style"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" LinkStyle\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[a("RouterLink",{attrs:{to:"/zh/API/interfaces.html#linkdata"}},[a("code",[t._v("LinkData")])]),t._v(" 接口定义了输入边的数据格式.")],1),t._v(" "),a("ul",[a("li",[a("code",[t._v("source")]),t._v(" 和 "),a("code",[t._v("target")]),t._v(" 是字符串. 它们是这条边的源头节点和目标节点的 "),a("code",[t._v("id")]),t._v(". 它们可以唯一确定一条边. 它们是必须的.")]),t._v(" "),a("li",[a("code",[t._v("style")]),t._v(" 边的样式，类型为["),a("code",[t._v("linkStyle")]),t._v("]")])]),t._v(" "),a("h2",{attrs:{id:"linkstyle"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#linkstyle"}},[t._v("#")]),t._v(" "),a("code",[t._v("LinkStyle")])]),t._v(" "),a("div",{staticClass:"language-typescript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-typescript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interface")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("LinkStyle")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    shape"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" LinkShape\n    strokeWidth"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("number")]),t._v("\n    strokeColor"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Color\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* curve shape */")]),t._v("\n    curveness"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("number")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[a("RouterLink",{attrs:{to:"/zh/API/interfaces.html#linkstyle"}},[a("code",[t._v("LinkStyle")])]),t._v("定义了边样式的格式。")],1),t._v(" "),a("ul",[a("li",[a("code",[t._v("shape")]),t._v(" 边的形状，包括："),a("code",[t._v("line")]),t._v(", "),a("code",[t._v("curve")])]),t._v(" "),a("li",[a("code",[t._v("strokeWidth")]),t._v(" 边的宽度. 默认值为 "),a("code",[t._v("2")]),t._v(".")]),t._v(" "),a("li",[a("code",[t._v("strokeColor")]),t._v(" 类型为："),a("RouterLink",{attrs:{to:"/zh/API/interfaces.html#color"}},[t._v("Color")]),t._v(", 边的颜色。默认值为 "),a("code",[t._v("{ r: 0.4, g: 0.6, b: 0.8, a: 0.5 }")]),t._v(".")],1),t._v(" "),a("li",[a("code",[t._v("curve")]),t._v("样式\n"),a("ul",[a("li",[a("code",[t._v("curveness")]),t._v(" 曲线的弯曲程度，范围为"),a("code",[t._v("[-1, 1]")]),t._v("，其中正方向为逆时针的弧线")])])])]),t._v(" "),a("h3",{attrs:{id:"nodelinkdata"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#nodelinkdata"}},[t._v("#")]),t._v(" "),a("code",[t._v("NodeLinkData")])]),t._v(" "),a("div",{staticClass:"language-typescript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-typescript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interface")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("NodeLinkData")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    nodes"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" NodeData"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    links"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" LinkData"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[a("RouterLink",{attrs:{to:"/zh/API/interfaces.html#nodelinkdata"}},[t._v("NodeLinkData")]),t._v(" 接口定义了输入的数据格式:")],1),t._v(" "),a("ul",[a("li",[a("code",[t._v("nodes")]),t._v(" 是"),a("RouterLink",{attrs:{to:"/zh/API/interfaces.html#nodedata"}},[a("code",[t._v("NodeData")])]),t._v("数组")],1),t._v(" "),a("li",[a("code",[t._v("links")]),t._v(" 是"),a("RouterLink",{attrs:{to:"/zh/API/interfaces.html#linkdata"}},[a("code",[t._v("LinkData")])]),t._v("数组. "),a("code",[t._v("links")]),t._v(" 可以为空, 此时只有节点将会被渲染")],1)]),t._v(" "),a("h2",{attrs:{id:"position"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#position"}},[t._v("#")]),t._v(" "),a("code",[t._v("Position")])]),t._v(" "),a("div",{staticClass:"language-typescript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-typescript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interface")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Position")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    x"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("number")]),t._v("\n    y"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("number")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[a("RouterLink",{attrs:{to:"/zh/API/interfaces.html#position"}},[t._v("Position")]),t._v(" 表示一个 2 维平面坐标. 比如，一个节点可以有一个位置："),a("code",[t._v("{x: 10, y: 10}")]),t._v("。")],1),t._v(" "),a("h2",{attrs:{id:"transform"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#transform"}},[t._v("#")]),t._v(" "),a("code",[t._v("Transform")])]),t._v(" "),a("div",{staticClass:"language-typescript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-typescript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interface")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Transform")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    x"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("number")]),t._v("\n    y"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("number")]),t._v("\n    k"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("number")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[a("RouterLink",{attrs:{to:"/zh/API/interfaces.html#transform"}},[t._v("Transform")]),t._v(" 指定了一次针对针对所有坐标的变换。比如，一个坐标为"),a("code",[t._v("(px, py)")]),t._v("的节点会被变换到"),a("code",[t._v("(px * k + x, py * k + y)")]),t._v("的位置。")],1)])}),[],!1,null,null,null);s.default=r.exports}}]);
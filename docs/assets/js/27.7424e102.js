(window.webpackJsonp=window.webpackJsonp||[]).push([[27],{846:function(t,a,s){"use strict";s.r(a);var e=s(113),n=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"netv"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#netv"}},[t._v("#")]),t._v(" NetV")]),t._v(" "),s("h2",{attrs:{id:"initialization"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#initialization"}},[t._v("#")]),t._v(" Initialization")]),t._v(" "),s("p",[s("code",[t._v("NetV")]),t._v(" is a class, an instance of "),s("code",[t._v("NetV")]),t._v(" can be created as follows:")]),t._v(" "),s("div",{staticClass:"language-typescript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-typescript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" netV "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("NetV")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* Configurations */")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[t._v("A "),s("code",[t._v("NetV")]),t._v(" instance can be initialized without any configuration except "),s("code",[t._v("container")]),t._v(". The "),s("code",[t._v("container")]),t._v(" must be a "),s("code",[t._v("div")]),t._v(" element. For example:")]),t._v(" "),s("div",{staticClass:"language-typescript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-typescript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" netV "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("NetV")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    container"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" document"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("createElement")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'div'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[t._v("The entire initialization configuration interface can be referred in: "),s("RouterLink",{attrs:{to:"/en/API/interfaces.html#InitializationConfigurations"}},[t._v("InitializationConfigurations")])],1),t._v(" "),s("h2",{attrs:{id:"manipulation"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#manipulation"}},[t._v("#")]),t._v(" Manipulation")]),t._v(" "),s("h3",{attrs:{id:"netv-backgroundcolor"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#netv-backgroundcolor"}},[t._v("#")]),t._v(" "),s("code",[t._v("netv.backgroundColor()")])]),t._v(" "),s("p",[t._v("Get/Set NetV's background color.")]),t._v(" "),s("ul",[s("li",[s("p",[s("code",[t._v("netv.backgroundColor()")]),t._v(": return NetV's background color in "),s("RouterLink",{attrs:{to:"/en/API/interfaces.html#color"}},[t._v("Color")]),t._v(".")],1)]),t._v(" "),s("li",[s("p",[s("code",[t._v("netv.backgroundColor(")]),s("RouterLink",{attrs:{to:"/en/API/interfaces.html#color"}},[s("code",[t._v("Color")])]),s("code",[t._v(")")]),t._v(": set NetV's background color in "),s("RouterLink",{attrs:{to:"/en/API/interfaces.html#color"}},[t._v("Color")]),t._v(".")],1)])]),t._v(" "),s("h3",{attrs:{id:"netv-dispose"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#netv-dispose"}},[t._v("#")]),t._v(" "),s("code",[t._v("netv.dispose()")])]),t._v(" "),s("p",[t._v("Dispose NetV instance. Wipe data and clear all related DOM elements and allocated memory.")]),t._v(" "),s("h3",{attrs:{id:"netv-data"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#netv-data"}},[t._v("#")]),t._v(" "),s("code",[t._v("NetV.data()")])]),t._v(" "),s("p",[t._v("Add data into the "),s("code",[t._v("NetV")]),t._v(" instance or return added data.")]),t._v(" "),s("ul",[s("li",[s("p",[s("code",[t._v("NetV.data()")]),t._v(": return added data (a "),s("RouterLink",{attrs:{to:"/en/API/interfaces.html#nodelinkdata"}},[s("code",[t._v("NodeLinkData")])]),t._v(" object).")],1)]),t._v(" "),s("li",[s("p",[s("code",[t._v("NetV.data(")]),s("RouterLink",{attrs:{to:"/en/API/interfaces.html#nodelinkdata"}},[s("code",[t._v("NodeLinkData")])]),s("code",[t._v(")")]),t._v(": add data into the "),s("code",[t._v("NetV")]),t._v(" instance, no return value value.")],1),t._v(" "),s("div",{staticClass:"language-typescript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-typescript"}},[s("code",[t._v("netV"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("data")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    nodes"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" id"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'0'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" x"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("300")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" y"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" id"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'1'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" x"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("500")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" y"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" id"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'2'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" x"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("400")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" y"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("400")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    links"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" source"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'0'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" target"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'2'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" source"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'1'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" target"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'2'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])])]),t._v(" "),s("h3",{attrs:{id:"netv-nodes"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#netv-nodes"}},[t._v("#")]),t._v(" "),s("code",[t._v("NetV.nodes()")])]),t._v(" "),s("p",[s("code",[t._v("NetV.nodes()")]),t._v(": return a "),s("RouterLink",{attrs:{to:"/en/API/node.html"}},[s("code",[t._v("Node")])]),t._v(" array which contains all the nodes in the "),s("code",[t._v("NetV")]),t._v(" instance.")],1),t._v(" "),s("h3",{attrs:{id:"netv-links"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#netv-links"}},[t._v("#")]),t._v(" "),s("code",[t._v("NetV.links()")])]),t._v(" "),s("p",[s("code",[t._v("NetV.links()")]),t._v(": return a "),s("RouterLink",{attrs:{to:"/en/API/link.html"}},[s("code",[t._v("Link")])]),t._v(" array which contains all the links in the "),s("code",[t._v("NetV")]),t._v(" instance.")],1),t._v(" "),s("h3",{attrs:{id:"netv-addnode"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#netv-addnode"}},[t._v("#")]),t._v(" "),s("code",[t._v("NetV.addNode()")])]),t._v(" "),s("p",[s("code",[t._v("NetV.addNode(")]),s("RouterLink",{attrs:{to:"/en/API/interfaces.html#nodedata"}},[s("code",[t._v("NodeData")])]),s("code",[t._v(")")]),t._v(": add a new node with its data (Interface: "),s("RouterLink",{attrs:{to:"/en/API/interfaces.html#nodedata"}},[s("code",[t._v("NodeData")])]),t._v("), return the added "),s("RouterLink",{attrs:{to:"/en/API/node.html"}},[s("code",[t._v("Node")])]),t._v(" object.")],1),t._v(" "),s("div",{staticClass:"language-typescript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-typescript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" newNode "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" netV"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("addNode")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    id"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'3'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    x"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    y"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    style"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        fill"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" r"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" g"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" b"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" a"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        r"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("h3",{attrs:{id:"netv-addlink"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#netv-addlink"}},[t._v("#")]),t._v(" "),s("code",[t._v("NetV.addLink()")])]),t._v(" "),s("p",[s("code",[t._v("NetV.addLink(")]),s("RouterLink",{attrs:{to:"/en/API/interfaces.html#linkdata"}},[s("code",[t._v("LinkData")])]),s("code",[t._v(")")]),t._v(": add a new link with its data (Interface: "),s("RouterLink",{attrs:{to:"/en/API/interfaces.html#linkdata"}},[s("code",[t._v("LinkData")])]),t._v("), return the added "),s("RouterLink",{attrs:{to:"/en/API/link.html"}},[s("code",[t._v("Link")])]),t._v(" object.")],1),t._v(" "),s("div",{staticClass:"language-typescript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-typescript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" newLink "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" netV"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("addLink")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    source"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'0'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    target"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'3'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    style"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        strokeColor"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" r"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" g"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" b"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" a"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("h3",{attrs:{id:"netv-addnodes"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#netv-addnodes"}},[t._v("#")]),t._v(" "),s("code",[t._v("NetV.addNodes()")])]),t._v(" "),s("p",[s("code",[t._v("NetV.addNodes(")]),s("RouterLink",{attrs:{to:"/en/API/interfaces.html#nodedata"}},[s("code",[t._v("NodeData")])]),s("code",[t._v("[] )")]),t._v(": add a list of new nodes with their data, no return value.")],1),t._v(" "),s("div",{staticClass:"language-typescript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-typescript"}},[s("code",[t._v("netV"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("addNodes")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" id"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'4'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" x"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("300")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" y"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" id"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'5'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" x"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("500")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" y"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" id"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'6'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" x"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("400")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" y"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("400")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("h3",{attrs:{id:"netv-addlinks"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#netv-addlinks"}},[t._v("#")]),t._v(" "),s("code",[t._v("NetV.addLinks()")])]),t._v(" "),s("p",[s("code",[t._v("NetV.addLinks(")]),s("RouterLink",{attrs:{to:"/en/API/interfaces.html#linkdata"}},[s("code",[t._v("LinkData")])]),s("code",[t._v("[] )")]),t._v(": add a list of new links with their data, no return value.")],1),t._v(" "),s("div",{staticClass:"language-typescript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-typescript"}},[s("code",[t._v("netV"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("addLinks")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" source"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'4'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" target"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'5'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" source"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'4'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" target"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'6'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("h3",{attrs:{id:"netv-getnodebyid"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#netv-getnodebyid"}},[t._v("#")]),t._v(" "),s("code",[t._v("NetV.getNodeById()")])]),t._v(" "),s("p",[s("code",[t._v("NetV.getNodeById( string )")]),t._v(": get a node from its ID, return a "),s("RouterLink",{attrs:{to:"/en/API/node.html"}},[s("code",[t._v("Node")])]),t._v(" object.")],1),t._v(" "),s("div",{staticClass:"language-typescript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-typescript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" nodeOne "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" netV"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getNodeById")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'1'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("h3",{attrs:{id:"netv-getlinkbyends"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#netv-getlinkbyends"}},[t._v("#")]),t._v(" "),s("code",[t._v("NetV.getLinkByEnds()")])]),t._v(" "),s("p",[s("code",[t._v("NetV.getLinkByEnds(endId1: stirng, endId2: string)")]),t._v(": get a link from its source node's ID and target node's ID, return a "),s("RouterLink",{attrs:{to:"/en/API/link.html"}},[s("code",[t._v("Link")])]),t._v(" object. The parameter is an array with two nodes' ID, and their order is no matter.")],1),t._v(" "),s("div",{staticClass:"language-typescript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-typescript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" linkOneTwo "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" netV"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getLinkByEnds")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'1'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'2'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("h3",{attrs:{id:"netv-getelementbyposition"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#netv-getelementbyposition"}},[t._v("#")]),t._v(" "),s("code",[t._v("NetV.getElementByPosition()")])]),t._v(" "),s("p",[s("code",[t._v("NetV.getElementByPosition( {x: number, y: number} )")]),t._v(": get an element (node/link) by a 2D position. Two numerical parameters are the 2D position (x and y). Return an object includes the Id\nand the object of the element : "),s("code",[t._v("{type: string, element: Node/Link}")])]),t._v(" "),s("div",{staticClass:"language-typescript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-typescript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" obj "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" netV"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getElementByPosition")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" x"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" y"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("200")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// example return: {type: 'node', element: Node}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("obj"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// no node/link on this position")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("console")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Empyt canvas on this position'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'node'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" node "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" obj"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("element\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" link "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" obj"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("element\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h3",{attrs:{id:"netv-wipe"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#netv-wipe"}},[t._v("#")]),t._v(" "),s("code",[t._v("NetV.wipe()")])]),t._v(" "),s("p",[s("code",[t._v("NetV.wipe()")]),t._v(": empty all the data in the "),s("code",[t._v("NetV")]),t._v(" instance, no return value.")]),t._v(" "),s("h3",{attrs:{id:"netv-loaddataset"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#netv-loaddataset"}},[t._v("#")]),t._v(" "),s("code",[t._v("NetV.loadDataset()")])]),t._v(" "),s("p",[s("code",[t._v("NetV.loadDataset( string )")]),t._v(": get an integrated dataset in "),s("em",[t._v("NetV.js")]),t._v(", return a "),s("RouterLink",{attrs:{to:"/en/API/interfaces.html#nodelinkdata"}},[s("code",[t._v("NodeLinkData")])]),t._v(" object. Several datasets are supported:")],1),t._v(" "),s("ul",[s("li",[s("code",[t._v("'miserables'")]),t._v(": it contains co-occurrences of characters in Victor Hugo's novel 'Les Misérables'. There are 77 nodes and 254 links.")]),t._v(" "),s("li",[s("code",[t._v("'patents'")]),t._v(": it comes from "),s("a",{attrs:{href:"https://www.patentsview.org/web/#viz/relationships",target:"_blank",rel:"noopener noreferrer"}},[t._v("PatentsView"),s("OutboundLink")],1),t._v(" which describes relationships between patents and companies. There are 352 nodes and 412 links.")])]),t._v(" "),s("div",{staticClass:"language-typescript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-typescript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" miserables "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" netV"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("loadDataset")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'miserables'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nnetV"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("data")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("miserables"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("h2",{attrs:{id:"interactions"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#interactions"}},[t._v("#")]),t._v(" Interactions")]),t._v(" "),s("h3",{attrs:{id:"netv-on"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#netv-on"}},[t._v("#")]),t._v(" "),s("code",[t._v("netv.on()")])]),t._v(" "),s("p",[t._v("Add event listener for NetV. Note that it's bound to whole canvas instead of single element.")]),t._v(" "),s("p",[s("code",[t._v("netv.on(eventName: string, callback: (e: Event) => void)")])]),t._v(" "),s("ul",[s("li",[s("code",[t._v("eventName")]),t._v(": event type, support "),s("code",[t._v("zoom")]),t._v(", "),s("code",[t._v("pan")]),t._v(", "),s("code",[t._v("mousedown")]),t._v(", "),s("code",[t._v("mouseup")]),t._v(", "),s("code",[t._v("click")])]),t._v(" "),s("li",[s("code",[t._v("callback")]),t._v(": function to call when trigger corresponding event.")])]),t._v(" "),s("h3",{attrs:{id:"netv-off"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#netv-off"}},[t._v("#")]),t._v(" "),s("code",[t._v("netv.off()")])]),t._v(" "),s("p",[t._v("Remove event listener for NetV. Note that it's bound to whole canvas instead of single element.")]),t._v(" "),s("p",[s("code",[t._v("netv.on(eventName: string, callback: (e: Event) => void)")])]),t._v(" "),s("ul",[s("li",[s("code",[t._v("eventName")]),t._v(": event type, support "),s("code",[t._v("zoom")]),t._v(", "),s("code",[t._v("pan")]),t._v(", "),s("code",[t._v("mousedown")]),t._v(", "),s("code",[t._v("mouseup")]),t._v(", "),s("code",[t._v("click")])]),t._v(" "),s("li",[s("code",[t._v("callback")]),t._v(": function to call when trigger corresponding event.")])]),t._v(" "),s("h3",{attrs:{id:"netv-panby"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#netv-panby"}},[t._v("#")]),t._v(" "),s("code",[t._v("netv.panBy()")])]),t._v(" "),s("p",[t._v("Manually pan NetV's canvas.")]),t._v(" "),s("p",[s("code",[t._v("netv.panBy(x: number, y: number)")]),t._v(": pan by (x, y) offset.")]),t._v(" "),s("h3",{attrs:{id:"netv-zoomby"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#netv-zoomby"}},[t._v("#")]),t._v(" "),s("code",[t._v("netv.zoomBy()")])]),t._v(" "),s("p",[t._v("Manually zoom NetV's canvas.")]),t._v(" "),s("p",[s("code",[t._v("netv.zoomBy(k: number, center?: Position)")]),t._v(": zoom by k with "),s("code",[t._v("center")]),t._v(" as the center. "),s("code",[t._v("center")]),t._v(" will be canvas middle position if not specified.")]),t._v(" "),s("h3",{attrs:{id:"netv-centeron"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#netv-centeron"}},[t._v("#")]),t._v(" "),s("code",[t._v("netv.centerOn()")])]),t._v(" "),s("p",[t._v("manually pan to move node to center.")]),t._v(" "),s("p",[s("code",[t._v("netv.centerOn(node: Node)")]),t._v(": pan whole canvas to get given node at center of canvas.")]),t._v(" "),s("h3",{attrs:{id:"netv-transform"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#netv-transform"}},[t._v("#")]),t._v(" "),s("code",[t._v("netv.transform()")])]),t._v(" "),s("p",[t._v("Get/Set NetV's transform. This can be used for programmatically set canvas's pan offset and zoom factor.")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("netv.transform()")]),t._v(": return NetV's canvas transform in "),s("RouterLink",{attrs:{to:"/en/API/interfaces.html#transform"}},[t._v("Transform")]),t._v(".")],1),t._v(" "),s("li",[s("code",[t._v("netv.transform(value)")]),t._v(": set NetV's transform.")])]),t._v(" "),s("h3",{attrs:{id:"netv-transition"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#netv-transition"}},[t._v("#")]),t._v(" "),s("code",[t._v("netv.transition()")])]),t._v(" "),s("p",[t._v("Easing from current transform to given transforms in array one by one.")]),t._v(" "),s("p",[s("code",[t._v("netv.transition(transforms: Transform[], durationMS: number[], callback?:({transform: Transform}) => void)")])]),t._v(" "),s("ul",[s("li",[s("code",[t._v("transforms")]),t._v(": transforms waiting for changing to, each element is a "),s("RouterLink",{attrs:{to:"/en/API/interfaces.html#transform"}},[t._v("Transform")]),t._v(".")],1),t._v(" "),s("li",[s("code",[t._v("durationMS")]),t._v(": duration for each easing.")]),t._v(" "),s("li",[s("code",[t._v("callback")]),t._v(": "),s("em",[t._v("optional")]),t._v(", function to call during each easing step. The callback function can get current transform as parameter: "),s("code",[t._v("{ transform: Transform}")])])]),t._v(" "),s("h2",{attrs:{id:"render"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#render"}},[t._v("#")]),t._v(" Render")]),t._v(" "),s("h3",{attrs:{id:"netv-draw"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#netv-draw"}},[t._v("#")]),t._v(" "),s("code",[t._v("NetV.draw()")])]),t._v(" "),s("p",[s("code",[t._v("NetV.draw()")]),t._v(": draw/refresh all graphs on the canvas. "),s("strong",[t._v("Note that")]),t._v(" the visualization result will only be refreshed after calling "),s("code",[t._v("NetV.draw()")])])])}),[],!1,null,null,null);a.default=n.exports}}]);